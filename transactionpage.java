
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.List;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import java.util.Date;
/**
 *
 * @author USER
 */
public class transactionpage extends javax.swing.JFrame {

    /**
     * Creates new form transactionpage
     */
    public transactionpage() {
        initComponents();
        setLocationRelativeTo(null);
        lbl_userType.setText(Session.userType);
        
        loadItemComboBox(ItemCodeComboR);
        loadItemComboBox(ItemCodeComboD);
        loadSupplierComboBox();  
        loadHospitalComboBox();
        
        loadReceiveTable();
        loadDistributeTable();



    }

    private void loadDistributeTable(String start, String end)
    {
        
        DefaultTableModel model = (DefaultTableModel) TableD.getModel();
        model.setRowCount(0); 
        List<Transaction> transactions = TransactionDAO.getDistributedTransactions(start, end);
        for (Transaction t : transactions) 
        {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String formattedDate = sdf.format(t.getTransactionDate());
            model.addRow(new Object[]
            {
                t.getTransactionID(),
                t.getItemCode(),
                t.getHospitalCode(),
                t.getQuantity(),
                t.getUserID(),
                formattedDate
            });
        }
    }

    private void loadReceiveTable(String start, String end) 
    {
        DefaultTableModel model = (DefaultTableModel) TableR.getModel();
        model.setRowCount(0); 
        List<Transaction> transactions = TransactionDAO.getReceivedTransactions(start, end);
        for (Transaction t : transactions) 
        {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String formattedDate = sdf.format(t.getTransactionDate());
            model.addRow(new Object[]
            {
                t.getTransactionID(),
                t.getItemCode(),
                t.getSupplierCode(),
                t.getQuantity(),
                t.getUserID(),
                formattedDate
            });
        }
    }

    private void loadItemComboBox(javax.swing.JComboBox<String> comboBox)
    {
        comboBox.removeAllItems();
        List<Item> items = itemDAO.getAllItemsSortedByCode();
        for (Item item : items)
        {
            comboBox.addItem(item.getItemCode());
        }
    }

    private void loadHospitalComboBox()
    {
        HospitalCodeCombo.removeAllItems();
        String query = "SELECT hospitalCode FROM hospital";
        try (Connection conn = DBConnection.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(query);
             ResultSet rs = pstmt.executeQuery())
        {
            while (rs.next())
            {
                HospitalCodeCombo.addItem(rs.getString("hospitalCode"));
            }
        } 
        catch (SQLException e)
        {
            JOptionPane.showMessageDialog(this, "Error loading hospital codes: " + e.getMessage());
        }
    }

    private void loadSupplierComboBox() 
    {
        SupplierCodeCombo.removeAllItems();
        String query = "SELECT supplierCode FROM supplier";
        try (Connection conn = DBConnection.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(query);
             ResultSet rs = pstmt.executeQuery()) 
        {
            while (rs.next()) 
            {
                SupplierCodeCombo.addItem(rs.getString("supplierCode"));
            }
        }
        catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(this, "Error loading supplier codes: " + e.getMessage());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableD = new javax.swing.JTable();
        QuantityTextD = new javax.swing.JTextField();
        CloseD = new javax.swing.JButton();
        ItemCodeComboD = new javax.swing.JComboBox<>();
        HospitalCodeCombo = new javax.swing.JComboBox<>();
        ItemCodeD = new javax.swing.JLabel();
        HospitalCode = new javax.swing.JLabel();
        QuantityD = new javax.swing.JLabel();
        SaveD = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        TrackD = new javax.swing.JButton();
        ResetD = new javax.swing.JButton();
        SDateD = new javax.swing.JTextField();
        EDateD = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableR = new javax.swing.JTable();
        ItemCodeComboR = new javax.swing.JComboBox<>();
        SupplierCodeCombo = new javax.swing.JComboBox<>();
        QuantityTextR = new javax.swing.JTextField();
        CloseR = new javax.swing.JButton();
        ItemCodeR = new javax.swing.JLabel();
        SupplierCode = new javax.swing.JLabel();
        QuantityR = new javax.swing.JLabel();
        SaveR = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        TrackR = new javax.swing.JButton();
        ResetR = new javax.swing.JButton();
        SDateR = new javax.swing.JTextField();
        EDateR = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Transaction Management");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 439, 50));

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        TableD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "TransactionID", "ItemCode", "HospitalCode", "Quantity", "UserID", "TransactionDate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableDMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableD);

        QuantityTextD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuantityTextDActionPerformed(evt);
            }
        });

        CloseD.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        CloseD.setText("Close");
        CloseD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseDActionPerformed(evt);
            }
        });

        ItemCodeComboD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HC", "FS", "MS", "GL", "GW" }));
        ItemCodeComboD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemCodeComboDActionPerformed(evt);
            }
        });

        HospitalCodeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "H001", "H002", "H003" }));
        HospitalCodeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HospitalCodeComboActionPerformed(evt);
            }
        });

        ItemCodeD.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ItemCodeD.setText("ItemCode");

        HospitalCode.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        HospitalCode.setText("HospitalCode");

        QuantityD.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        QuantityD.setText("Quantity");

        SaveD.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SaveD.setText("Save");
        SaveD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveDActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 255));
        jLabel3.setText("Add ");
        jLabel3.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 255));
        jLabel4.setText("Track");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Start Date");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("End Date");

        TrackD.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        TrackD.setText("Track");
        TrackD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TrackDActionPerformed(evt);
            }
        });

        ResetD.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ResetD.setText("Reset");
        ResetD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetDActionPerformed(evt);
            }
        });

        SDateD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SDateDActionPerformed(evt);
            }
        });

        EDateD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EDateDActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setText("-");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SDateD, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(EDateD, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71)
                                .addComponent(TrackD, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(ResetD, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ItemCodeD, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ItemCodeComboD, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(123, 123, 123)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(HospitalCodeCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(HospitalCode, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(QuantityTextD, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuantityD, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CloseD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SaveD, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(SaveD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(QuantityD, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(QuantityTextD, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ItemCodeD, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HospitalCode, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(4, 4, 4)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ItemCodeComboD, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HospitalCodeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SDateD, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EDateD, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(TrackD, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ResetD, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CloseD, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35))))
        );

        jTabbedPane1.addTab("Distribution", jPanel2);

        TableR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "TransactionID", "ItemCode", "SupplierCode", "Quantity", "UserID", "TransactionDate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TableR);

        ItemCodeComboR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HC", "FS", "MS", "GL", "GW" }));
        ItemCodeComboR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemCodeComboRActionPerformed(evt);
            }
        });

        SupplierCodeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "S001", "S002", "S003" }));
        SupplierCodeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SupplierCodeComboActionPerformed(evt);
            }
        });

        QuantityTextR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuantityTextRActionPerformed(evt);
            }
        });

        CloseR.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        CloseR.setText("Close");
        CloseR.setToolTipText("");
        CloseR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseRActionPerformed(evt);
            }
        });

        ItemCodeR.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ItemCodeR.setText("ItemCode");

        SupplierCode.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SupplierCode.setText("SupplierCode");

        QuantityR.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        QuantityR.setText("Quantity");

        SaveR.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SaveR.setText("Save");
        SaveR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveRActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 255));
        jLabel7.setText("Add");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 153, 255));
        jLabel8.setText("Track");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Start Date");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("End Date");

        TrackR.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        TrackR.setText("Track");
        TrackR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TrackRActionPerformed(evt);
            }
        });

        ResetR.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ResetR.setText("Reset");
        ResetR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetRActionPerformed(evt);
            }
        });

        SDateR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SDateRActionPerformed(evt);
            }
        });

        EDateR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EDateRActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setText("-");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addGap(6, 6, 6))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(ItemCodeComboR, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(ItemCodeR, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(109, 109, 109)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(SupplierCode, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(SupplierCodeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(65, 65, 65)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(44, 44, 44)))
                                .addGap(118, 118, 118)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(QuantityTextR)
                                    .addComponent(QuantityR, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE))))
                        .addGap(63, 63, 63))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(141, 141, 141)
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(EDateR, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(TrackR, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(SDateR, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(ResetR, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CloseR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SaveR, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SupplierCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ItemCodeR))
                    .addComponent(QuantityR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ItemCodeComboR, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SupplierCodeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(QuantityTextR, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SaveR, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(CloseR, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SDateR, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(EDateR, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TrackR, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ResetR, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(48, 48, 48))
        );

        jTabbedPane1.addTab("Receive", jPanel1);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 830, 566));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gassignment/profile icon.png"))); // NOI18N
        jLabel13.setOpaque(true);
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 20, 160, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gassignment/systembackground (1).png"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    

    
    
    
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        loadDistributeTable(); 
        loadReceiveTable();
        loadItemComboBox(ItemCodeComboR);
        loadItemComboBox(ItemCodeComboD);
        loadSupplierComboBox(); 
        loadHospitalComboBox();

    }//GEN-LAST:event_formComponentShown

    private void ItemCodeComboRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemCodeComboRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemCodeComboRActionPerformed

    private void QuantityTextRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuantityTextRActionPerformed
        String quantityStr = QuantityTextR.getText();

    try 
    {
        
        Integer.parseInt(quantityStr);
        JOptionPane.showMessageDialog(this, "Input is valid.");
    } 
    catch (NumberFormatException e) 
    {
        JOptionPane.showMessageDialog(this, "Please enter a number.");
    }
        
        
    }//GEN-LAST:event_QuantityTextRActionPerformed

    private void CloseRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseRActionPerformed
        this.dispose();
        
        if("admin".equalsIgnoreCase(Session.userType))
        {
            new AdminPage().setVisible(true);
        }
        else if ("staff".equalsIgnoreCase(Session.userType))
        {
            new StaffPage().setVisible(true); 
        }
        else
        {
            JOptionPane.showMessageDialog(this,"Unknown user role. Cannot go back.");
        }
    }//GEN-LAST:event_CloseRActionPerformed

    private void QuantityTextDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuantityTextDActionPerformed
        String quantityStr = QuantityTextD.getText();

    try 
    {
        
        Integer.parseInt(quantityStr);
        JOptionPane.showMessageDialog(this, "Input is valid.");
    }
    catch (NumberFormatException e) 
    {
        JOptionPane.showMessageDialog(this, "Please enter a number.");
    }

        
     
    }//GEN-LAST:event_QuantityTextDActionPerformed

    private void CloseDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseDActionPerformed
        this.dispose();
        
        if("admin".equalsIgnoreCase(Session.userType))
        {
            new AdminPage().setVisible(true); 
        }
        else if ("staff".equalsIgnoreCase(Session.userType))
        {
            new StaffPage().setVisible(true); 
        }
        else
        {
            JOptionPane.showMessageDialog(this,"Unknown user role. Cannot go back.");
        }
    }//GEN-LAST:event_CloseDActionPerformed

    private void ItemCodeComboDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemCodeComboDActionPerformed
        // TODO add your handling code here:
    
    
    }//GEN-LAST:event_ItemCodeComboDActionPerformed

    private void HospitalCodeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HospitalCodeComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HospitalCodeComboActionPerformed

    private void SupplierCodeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SupplierCodeComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SupplierCodeComboActionPerformed

    private void SaveDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveDActionPerformed
        // TODO add your handling code here:
        String ItemCode = (String) ItemCodeComboD.getSelectedItem();
        String HospitalCode = (String) HospitalCodeCombo.getSelectedItem();
        String Quantity = QuantityTextD.getText();

    try 
    {
        if (ItemCode == null || HospitalCode == null) 
        {
            JOptionPane.showMessageDialog(this, "Please select an Item Code and Hospital Code.");
            return;
        }
        
        int quantity = Integer.parseInt(Quantity);
        if (quantity <= 0) 
        {
            JOptionPane.showMessageDialog(this, "Quantity must be positive!");
            return;
        }

        int currentStock = itemDAO.getStockQuantity(ItemCode);
        if (currentStock < quantity)
        {
            JOptionPane.showMessageDialog(this, "Not enough stock to distribute!");
            return;
        }

        Transaction t = new Transaction();
        t.setTransactionType("DISTRIBUTED");
        t.setItemCode(ItemCode);
        t.setSupplierCode(null);
        t.setHospitalCode(HospitalCode);
        t.setUserID(Session.userID);
        t.setQuantity(quantity);

        TransactionDAO.insertTransaction(t);
        
        loadDistributeTable();

        JOptionPane.showMessageDialog(this, "Distribution Transaction Recorded!");
        QuantityTextD.setText("");

    } 
    
    catch (NumberFormatException e) 
    {
        JOptionPane.showMessageDialog(this, "Invalid quantity. Please enter a number.");
    } 
    catch (InsufficientStockException e) 
    {
        JOptionPane.showMessageDialog(this, e.getMessage(), "Stock Error", JOptionPane.ERROR_MESSAGE);
    } 
    catch (Exception e) 
    {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    
    }//GEN-LAST:event_SaveDActionPerformed

    private void SaveRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveRActionPerformed
        // TODO add your handling code here:
        String ItemCode = (String) ItemCodeComboR.getSelectedItem();
        String SupplierCode = (String) SupplierCodeCombo.getSelectedItem();
        String Quantity = QuantityTextR.getText();
        
        try
        {
        
        if (ItemCode == null || SupplierCode == null) 
        {
            JOptionPane.showMessageDialog(this, "Please select an Item Code and Supplier Code.");
            return;
        }
        int quantity = Integer.parseInt(Quantity);
        if (quantity <= 0) 
        {
            JOptionPane.showMessageDialog(this, "Quantity must be positive!");
            return;
        }

        Transaction t = new Transaction();
        t.setTransactionType("RECEIVED");
        t.setItemCode(ItemCode);
        t.setSupplierCode(SupplierCode);
        t.setHospitalCode(null); 
        t.setUserID(Session.userID); 
        t.setQuantity(quantity);

        TransactionDAO.insertTransaction(t);
        
        loadReceiveTable();

        JOptionPane.showMessageDialog(this, "Receive Transaction Recorded!");
        QuantityTextR.setText("");

        } 
        catch (NumberFormatException e) 
        {
        JOptionPane.showMessageDialog(this, "Invalid quantity. Please enter a number.");
        } 
        catch (InsufficientStockException e) 
        {
        JOptionPane.showMessageDialog(this, e.getMessage(), "Stock Error", JOptionPane.ERROR_MESSAGE);
        } 
        catch (Exception e) 
        {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage()
        );
        }

    }//GEN-LAST:event_SaveRActionPerformed

    private void TableDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableDMouseClicked
        
    }//GEN-LAST:event_TableDMouseClicked

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // TODO add your handling code here:
    if (jTabbedPane1.getSelectedIndex() == 0)
    { 
        loadDistributeTable();
    } 
    else if 
    (jTabbedPane1.getSelectedIndex() == 1)
    { 
        loadReceiveTable();
    }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void SDateRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SDateRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SDateRActionPerformed

    private void SDateDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SDateDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SDateDActionPerformed

    private void EDateDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EDateDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EDateDActionPerformed

    private void ResetDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetDActionPerformed
        // TODO add your handling code here:
        SDateD.setText("");
        EDateD.setText("");
    
    
        loadDistributeTable();
    }//GEN-LAST:event_ResetDActionPerformed

    private void TrackDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TrackDActionPerformed
        // TODO add your handling code here:
    try 
    {
        
        String startDate = SDateD.getText().trim();
        String endDate = EDateD.getText().trim();

        
        if (startDate.isEmpty() || endDate.isEmpty()) 
        {
            JOptionPane.showMessageDialog(this, "Please enter both Start Date and End Date.");
            return;
        }

        
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        dateFormat.setLenient(false);
        Date start;
        Date end;
        try 
        {
            start = dateFormat.parse(startDate);
            end = dateFormat.parse(endDate);
        } 
        catch (ParseException e)
        {
            JOptionPane.showMessageDialog(this, "Invalid date format. Please use yyyy-MM-dd (e.g., 2025-01-01).");
            return;
        }

        
        if (start.after(end))
        {
            JOptionPane.showMessageDialog(this, "End Date cannot be before Start Date.");
            return;
        }

        
        List<Transaction> transactions = TransactionDAO.getDistributedTransactionsInRange(startDate, endDate);
        loadDistributeTable(startDate, endDate);
        if (transactions.isEmpty())
        {
            JOptionPane.showMessageDialog(this, 
                "No distributed transactions found between " + startDate + " and " + endDate + ".");
        }
    } 
    catch (Exception e) 
    {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_TrackDActionPerformed

    private void EDateRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EDateRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EDateRActionPerformed

    private void TrackRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TrackRActionPerformed
        // TODO add your handling code here:
    try
    {
        
        String startDate = SDateR.getText().trim();
        String endDate = EDateR.getText().trim();

        
        if (startDate.isEmpty() || endDate.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Please enter both Start Date and End Date.");
            return;
        }

        
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        dateFormat.setLenient(false);
        Date start;
        Date end;
        try
        {
            start = dateFormat.parse(startDate);
            end = dateFormat.parse(endDate);
        }
        catch (ParseException e)
        {
            JOptionPane.showMessageDialog(this, "Invalid date format. Please use yyyy-MM-dd (e.g., 2025-01-01).");
            return;
        }

        
        if (start.after(end))
        {
            JOptionPane.showMessageDialog(this, "End Date cannot be before Start Date.");
            return;
        }

        
        List<Transaction> transactions = TransactionDAO.getReceivedTransactionsInRange(startDate, endDate);
        loadReceiveTable(startDate, endDate);
        if (transactions.isEmpty())
        {
            JOptionPane.showMessageDialog(this, 
                "No received transactions found between " + startDate + " and " + endDate + ".");
        }
    }
    catch (Exception e) 
    {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_TrackRActionPerformed

    private void ResetRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetRActionPerformed
        // TODO add your handling code here:
        SDateR.setText("");
        EDateR.setText("");
    
   
        loadReceiveTable();
    }//GEN-LAST:event_ResetRActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(transactionpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(transactionpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(transactionpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(transactionpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new transactionpage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CloseD;
    private javax.swing.JButton CloseR;
    private javax.swing.JTextField EDateD;
    private javax.swing.JTextField EDateR;
    private javax.swing.JLabel HospitalCode;
    private javax.swing.JComboBox<String> HospitalCodeCombo;
    private javax.swing.JComboBox<String> ItemCodeComboD;
    private javax.swing.JComboBox<String> ItemCodeComboR;
    private javax.swing.JLabel ItemCodeD;
    private javax.swing.JLabel ItemCodeR;
    private javax.swing.JLabel QuantityD;
    private javax.swing.JLabel QuantityR;
    private javax.swing.JTextField QuantityTextD;
    private javax.swing.JTextField QuantityTextR;
    private javax.swing.JButton ResetD;
    private javax.swing.JButton ResetR;
    private javax.swing.JTextField SDateD;
    private javax.swing.JTextField SDateR;
    private javax.swing.JButton SaveD;
    private javax.swing.JButton SaveR;
    private javax.swing.JLabel SupplierCode;
    private javax.swing.JComboBox<String> SupplierCodeCombo;
    private javax.swing.JTable TableD;
    private javax.swing.JTable TableR;
    private javax.swing.JButton TrackD;
    private javax.swing.JButton TrackR;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
